import socket
import threading
import tkinter as tk
from tkinter import scrolledtext

class ServerApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Server GUI")
        
        self.text_area = scrolledtext.ScrolledText(root, wrap=tk.WORD, width=40, height=10)
        self.text_area.pack(padx=10, pady=10)
        
        self.start_button = tk.Button(root, text="Start Server", command=self.start_server)
        self.start_button.pack(pady=5)
        
        self.stop_button = tk.Button(root, text="Stop Server", command=self.stop_server, state=tk.DISABLED)
        self.stop_button.pack(pady=5)
        
        self.server_thread = None
        self.server_socket = None
        self.running = False

    def start_server(self):
        self.server_thread = threading.Thread(target=self.run_server)
        self.server_thread.start()
        self.start_button.config(state=tk.DISABLED)
        self.stop_button.config(state=tk.NORMAL)
        self.text_area.insert(tk.END, "Server started...\n")

    def stop_server(self):
        self.running = False
        if self.server_socket:
            self.server_socket.close()
        self.start_button.config(state=tk.NORMAL)
        self.stop_button.config(state=tk.DISABLED)
        self.text_area.insert(tk.END, "Server stopped...\n")

    def run_server(self):
        self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.server_socket.bind(('localhost', 65432))
        self.server_socket.listen(1)
        self.running = True
        self.text_area.insert(tk.END, "Waiting for a connection...\n")

        while self.running:
            try:
                conn, addr = self.server_socket.accept()
                self.text_area.insert(tk.END, f"Connected by {addr}\n")
                while self.running:
                    data = conn.recv(1024)
                    if not data:
                        break
                    self.text_area.insert(tk.END, f"Received from client: {data.decode()}\n")
                    conn.sendall(b"ACK")
                conn.close()
            except socket.error:
                break

if __name__ == "__main__":
    root = tk.Tk()
    app = ServerApp(root)
    root.mainloop()