#define NUM_DISTANCES 20

program

    var $axis as axis = Theta
    var $i as integer
	var $fileHandle as handle
	
	$fileHandle = FileOpenText("motor_settings.csv", FileMode.Read)
	
	// Read all lines from the files in a loop.
	AppMessageDisplay("Displaying lines in the file:")
	while (true)
		var $stringValue as string

		// Read the next line.
		$stringValue = FileTextReadLine($fileHandle)
		if (StringEquals($stringValue, ""))
			break
		end

		// Display the line that was read.
		AppMessageDisplay($stringValue)
		Dwell(0.100)
	end

	// Close the file.
	FileClose($fileHandle)
	
	var $FixedTotalTime = 1000
	var $FixedOnTime = 100
	var $FixedCount = 200
    var $distances[NUM_DISTANCES] as real
	
	// Set incremental mode.
	SetupTaskTargetMode(TargetMode.Incremental)

    Enable($axis)
    //Home($axis)

    // Reset internal PSO counters
    PsoReset($axis)
    
    //****** PSO distance event module setup ******
    PsoDistanceConfigureInputs($axis, [PsoDistanceInput.iXC4PrimaryFeedback])
 
    // Define a user-settable array of distances (example values are provided)
    //var $user_distances[NUM_DISTANCES] as real = [18, 36, 54, 72, 90, 108, 126, 144, 162, 180, 198, 216, 234, 252, 270, 288, 306, 324, 342, 360]
	var $user_distances[NUM_DISTANCES] as real = [18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18]

    for $i = 0 to 19
		$distances[$i] = UnitsToCounts($axis, ($user_distances[$i])) / ParameterGetAxisValue($axis, AxisParameter.PrimaryEmulatedQuadratureDivider)
	end
		
    DriveArrayWrite($axis, $distances, 0, NUM_DISTANCES, DriveArrayType.PsoDistanceEventDistances)

    // Configure the distance module to generate an event at the distances specified in the drive array.
    PsoDistanceConfigureArrayDistances($axis, 0, NUM_DISTANCES, true)  // Enable wrap-around

    PsoDistanceCounterOn($axis)
    PsoDistanceEventsOn($axis)

    //****** PSO waveform module setup (pulse) ******
    PsoWaveformConfigureMode($axis, PsoWaveformMode.Pulse)
    PsoWaveformConfigurePulseFixedTotalTime($axis, $FixedTotalTime)  // Total pulse time (microseconds)
    PsoWaveformConfigurePulseFixedOnTime($axis, $FixedOnTime)      // ON time (microseconds)
    PsoWaveformConfigurePulseFixedCount($axis, $FixedCount)         // Number of output events per pulse
    PsoWaveformApplyPulseConfiguration($axis)
    PsoWaveformOn($axis)
    
    //****** PSO output module setup ******
    PsoOutputConfigureSource($axis, PsoOutputSource.Waveform)
    PsoOutputConfigureOutput($axis, PsoOutputPin.iXC4AuxiliaryMarkerSingleEnded)
    
    // Start motor movement (continuous)
    //MoveFreerun($axis, $speed)
    
end
